#!/bin/sh
#!/bin/sh

# File preview handler for lf.

set -C -f
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

image() {
	if [ -f "$1" ] && [ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ] && command -V ueberzug >/dev/null 2>&1; then
		printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' "$4" "$5" "$(($2-1))" "$(($3-1))" "$1" > "$FIFO_UEBERZUG"
	else
		mediainfo "$6"
	fi
}

ifub() {
	[ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ] && command -V ueberzug >/dev/null 2>&1
}

# Note that the cache file name is a function of file information, meaning if
# an image appears in multiple places across the machine, it will not have to
# be regenerated once seen.

case "$(file --dereference --brief --mime-type -- "$1")" in
	image/avif) CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE" ] && convert "$1" "$CACHE.jpg"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1" ;;
	image/vnd.djvu)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE" ] && djvused "$1" -e 'select 1; save-page-with /dev/stdout' | convert -density 200 - "$CACHE.jpg" > /dev/null 2>&1
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1" ;;
	image/*) image "$1" "$2" "$3" "$4" "$5" "$1" ;;
	text/html) lynx -width="$4" -display_charset=utf-8 -dump "$1" ;;
	text/troff) man ./ "$1" | col -b ;;
	text/* | */xml | application/json | application/x-ndjson) bat --terminal-width "$(($4-2))" -f "$1" ;;
	audio/* | application/octet-stream) mediainfo "$1" || exit 1 ;;
	video/* )
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
		image "$CACHE" "$2" "$3" "$4" "$5" "$1"
		;;
	*/pdf)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
		;;
	*/epub+zip|*/mobi*)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
		;;
	application/*zip) atool --list -- "$1" ;;
	*opendocument*) odt2txt "$1" ;;
	application/pgp-encrypted) gpg -d -- "$1" ;;
esac
exit 1

# ueberzugpp
# image() {
#     FILE_PATH="$1"
#     X=$4
#     Y=$5
#     MW=$(($2 - 1))
#     MH=$3
#     ueberzugpp cmd -s "$UB_SOCKET" -a add -i PREVIEW -x "$X" -y "$Y" --max-width "$MW" --max-height "$MH" -f "$FILE_PATH"
#     exit 1
# }

# batorcat() {
#     file="$1"
#     shift
#     if command -v bat >/dev/null 2>&1; then
#         bat --color=always --style=plain --pager=never "$file" "$@"
#     else
#         cat "$file"
#     fi
# }

# CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"

# case "$(printf "%s\n" "$(readlink -f "$1")" | tr '[:upper:]' '[:lower:]')" in
#     *.tgz | *.tar.gz) tar tzf "$1" ;;
#     *.tar.bz2 | *.tbz2) tar tjf "$1" ;;
#     *.tar.txz | *.txz) xz --list "$1" ;;
#     *.tar) tar tf "$1" ;;
#     *.zip | *.jar | *.war | *.ear | *.oxt) unzip -l "$1" ;;
#     *.rar) unrar l "$1" ;;
#     *.7z) 7z l "$1" ;;
#     *.[1-8]) man "$1" | col -b ;;
#     *.o) nm "$1" ;;
#     *.torrent) transmission-show "$1" ;;
#     *.iso) iso-info --no-header -l "$1" ;;
#     *.odt | *.ods | *.odp | *.sxw) odt2txt "$1" ;;
#     *.doc) catdoc "$1" ;;
#     *.docx) docx2txt "$1" - ;;
#     *.xls | *.xlsx)
#         ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://1" | batorcat --language=csv
#         ;;
#     *.wav | *.mp3 | *.flac | *.m4a | *.wma | *.ape | *.ac3 | *.og[agx] | *.spx | *.opus | *.as[fx] | *.mka)
#         exiftool "$1"
#         ;;
#     *.pdf)
#         [ ! -f "${CACHE}.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
#         image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
#         ;;
#     *.avi | *.mp4 | *.wmv | *.dat | *.3gp | *.ogv | *.mkv | *.mpg | *.mpeg | *.vob | *.fl[icv] | *.m2v | *.mov | *.webm | *.ts | *.mts | *.m4v | *.r[am] | *.qt | *.divx)
#         [ ! -f "${CACHE}.jpg" ] && ffmpegthumbnailer -i "$1" -o "${CACHE}.jpg" -s 0 -q 5
#         image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
#         ;;
#     *.bmp | *.jpg | *.jpeg | *.png | *.xpm | *.webp | *.gif | *.jfif)
#         image "$1" "$2" "$3" "$4" "$5"
#         ;;
#     *.svg)
#         [ ! -f "${CACHE}.jpg" ] && convert "$1" "${CACHE}.jpg"
#         image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
#         ;;
#     *)
#         batorcat "$1"
#         ;;
# esac
# exit 0

