# Read `man 5 sway` for a complete reference.
### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run | xargs swaymsg exec --
set $browser qutebrowser

### Output configuration
#
output VGA-1 resolution 1920x1080 position 0,0
output LVDS-1 resolution 1366x768 position 0,1080
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
 exec swayidle -w \
          timeout 300 'waylock' \
          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'waylock'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Gaps and borders
gaps outer 2
gaps inner 5
smart_gaps on
default_border pixel 2
smart_borders on
client.focused "#9f1209" "#9f1209" "#ffffff"

### Key bindings
input "type:keyboard" {
    xkb_layout us,ru,lv
    xkb_options grp:alt_shift_toggle,caps:escape,shift:both_capslock
    repeat_delay 300
    repeat_rate 50
} 

### Basics:
	bindsym --to-code $mod+m exec "$term ncmpcpp"
	bindsym --to-code $mod+Shift+m exec "$term pulsemixer"
	bindsym --to-code $mod+w exec $browser
	bindsym --to-code $mod+Shift+r exec "$term lfub"
	bindsym --to-code $mod+Shift+e exec "$term btop"
	bindsym --to-code $mod+n exec "$term nvim -c VimwikiIndex"
	bindsym --to-code $mod+Shift+t exec "$term stig"
	bindsym --to-code $mod+Shift+n exec "$term newsboat"
	bindsym --to-code $mod+Shift+w exec setbgW
	bindsym --to-code $mod+p exec waylock
	bindsym --to-code $mod+Insert exec "wtype $(grep -v '^#' ~/.local/bin/bookmarks | bemenu -i -l 50 | cut -d' ' -f1)"
	# Brightness controll
	bindsym --to-code --locked XF86MonBrightnessDown exec brightnessctl set 5%-
	bindsym --to-code --locked XF86MonBrightnessUp exec brightnessctl set 5%+

    # Start a terminal
   bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+Shift+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+p exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Moving focus and windows:
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right
    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right

# Sound controls:
	bindsym --locked XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
	bindsym --locked XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- -l 1.2
	bindsym --locked XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1.2

# Workspaces:
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    bindsym --to-code $mod+7 workspace number 7
    bindsym --to-code $mod+8 workspace number 8
    bindsym --to-code $mod+9 workspace number 9
    bindsym --to-code $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6
    bindsym --to-code $mod+Shift+7 move container to workspace number 7
    bindsym --to-code $mod+Shift+8 move container to workspace number 8
    bindsym --to-code $mod+Shift+9 move container to workspace number 9
    bindsym --to-code $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+y layout stacking
    bindsym --to-code $mod+Shift+y layout tabbed
    bindsym --to-code $mod+t layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
 position top
     # When the status_command prints a new line to stdout, swaybar updates.
     # The default just shows the current date and time.
     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
     # status_command while "cat /sys/class/power_supply/BAT0/capacity"; do sleep 10; done

     colors {
         statusline #ffffff
         background #323232
         inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

exec mpd
exec pipewire & pipewire-pulse & wireplumber
include /etc/sway/config.d/*
